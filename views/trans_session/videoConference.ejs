<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0">
    <title>Video Conference</title>
    <link rel="stylesheet" href="https://d1x2efl61akomv.cloudfront.net/styles/main.5e44cee8.css">
    <link href="/../css/appear2.css" rel="stylesheet">
    <link href="/../css/getMediaElement.css" rel="stylesheet">
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8/jquery.min.js"></script>

    <!-- custom layout for HTML5 audio/video elements-->
    <script src="<%=config.get("socketURL")%>socket.io/socket.io.js"></script>
    <script src="/../js/RTCMultiConnection.js"></script>
    <script src="/../js/getMediaElement.js"></script>

    <!-- custom layout for HTML5 audio/video elements -->
    <script src="/../js/FileBufferReader.js"></script>

</head>

<script>

    $(document).ready(function () {
        disableInputButtons();

        $('#close_btn').click(function() {
            $('#room_activity').removeClass('open');
        });

        $('#chat_btn').click(function() {
            $('#chat_wrapper').removeClass('notvisible');
            $('#chat_wrapper_content').addClass('is-visible');
            document.getElementById('input-text-chat').focus();
        });

        $('#close_chat_btn').click(function() {
            $('#chat_wrapper_content').removeClass('is-visible');
            $('#chat_wrapper').addClass('notvisible');
        });

        $('#icon_activity').click(function() {
            $('#room_activity').addClass('open');
        });

        // FileSharing/TextChat Code
        document.getElementById('share-file').onclick = function() {
            var fileSelector = new FileSelector();
            fileSelector.selectSingleFile(function(file) {
                connection.send(file);
            });
        };
        var username="<%=username%>";
        document.getElementById('input-text-chat').onkeyup = function(e) {
            if (e.keyCode != 13) return;
            // removing trailing/leading whitespace
            this.value = this.value.replace(/^\s+|\s+$/g, '');
            if (!this.value.length) return;
            connection.send(username + " : "+ this.value);
            appendDIV("Me : "+this.value);
            this.value = '';
        };

        function getMessageTime() {
            var date = new Date;
            var seconds = date.getSeconds();
            var minutes = date.getMinutes();
            var hour = date.getHours();
            return hour+":"+minutes+":"+seconds;
        }

        var chatContainer = document.getElementById('chat-output');
            function appendDIV(event) {
                if($('#chat_wrapper').hasClass('notvisible')){
                $('#chat_wrapper').removeClass('notvisible');
                $('#chat_wrapper_content').addClass('is-visible');
            }
            var div = document.createElement('div');
            div.innerHTML = event.data  || event;
            chatContainer.insertBefore(div, chatContainer.firstChild);
            div.tabIndex = 0;
            div.focus();
            document.getElementById('input-text-chat').focus();
        }

    var connection = new RTCMultiConnection();
    // socket.io server
    connection.socketURL = "<%=config.get("socketURL")%>";
    // connection.socketURL = 'https://rtcmulticonnection.herokuapp.com:443/';

    connection.socketMessageEvent = 'video-conference-demo';
    connection.maxParticipantsAllowed = '3';
    connection.userid='<%=peerId%>';
    connection.enableFileSharing = true;
    connection.videochatid='<%=roomId%>';

    connection.session = {
        audio: true,
        video: true,
        data: true
    };

    connection.sdpConstraints.mandatory = {
        OfferToReceiveAudio: true,
        OfferToReceiveVideo: true
    };

    var i=0;
    connection.videosContainer = document.getElementById('video-wrapper');
    connection.onstream = function (event) {
        ++i;
        i==1 ? mute=true : mute=false;

      // if(event.userid=='admin' && i>1){  // if it is not my local stream
      //     parts = connection.getAllParticipants().length;
      //     connection.getNumberOfBroadcastViewers ('6', function () {
      //     alert(numberOfBroadcastViewers);
      // });
      // alert(parts);
      // }

      // var width = parseInt(connection.videosContainer.clientWidth / 2) - 20;

        var mediaElement = getMediaElement(event.mediaElement, {
            title: event.userid,
            //    buttons: ['full-screen'],
            //    buttons: ['volume-slider'],
            buttons: [''],
            //    width: width,
            muted: mute,
            autoplay: true,
            //    volume: vol,
            //    showOnMouseEnter: false
        });
        addNewVideoBox(event.userid, mediaElement);

        setTimeout(function () {
  //          mediaElement.media.play();
        }, 5000);

        mediaElement.id = event.streamid;
    };

    connection.onstreamended = function (event) {
        var mediaElement = document.getElementById(event.streamid);
        if (mediaElement) {
            removeVideoBox(event.userid);
        }
    };

    connection.onmessage = appendDIV;
    connection.filesContainer = document.getElementById('file-container');

    connection.onRoomFull =  function (event) {
        alert("session is full! max. participants="+connection.maxParticipantsAllowed);
    }

    connection.onUserIdAlreadyTaken = function (event) {
        alert("you already have active session!");
    }

    function disableInputButtons() {
        document.getElementById('room-id').disabled = true;
    }
        /*
    (function () {
        var params = {},
                r = /([^&=]+)=?([^&]*)/g;
        function d(s) {
            return decodeURIComponent(s.replace(/\+/g, ' '));
        }
        var match, search = window.location.search;
        while (match = r.exec(search.substring(1)))
            params[d(match[1])] = d(match[2]);
        window.params = params;
    })();


    var roomid = '';
    if (localStorage.getItem(connection.socketMessageEvent)) {
        roomid = localStorage.getItem(connection.socketMessageEvent);
    } else {
        roomid = connection.token();
    }

    document.getElementById('room-id').value = roomid;

    document.getElementById('room-id').onkeyup = function () {
        localStorage.setItem(connection.socketMessageEvent, this.value);
    };

    var hashString = location.hash.replace('#', '');
    if (hashString.length && hashString.indexOf('comment-') == 0) {
        hashString = '';
    }

    var roomid = params.roomid;
    if (!roomid && hashString.length) {
        roomid = hashString;
    }

    if (roomid && roomid.length) {
        document.getElementById('room-id').value = roomid;
        localStorage.setItem(connection.socketMessageEvent, roomid);

        // auto-join-room
        (function reCheckRoomPresence() {
            connection.checkPresence(roomid, function (isRoomExists) {
                if (isRoomExists) {
                    connection.join(roomid);
                    return;
                }
                setTimeout(reCheckRoomPresence, 5000);
            });
        })();

        disableInputButtons();
    }
  */
    function addNewVideoBox(userId, video) {

        var divHtml = $("#video-wrapper").html() +
                "<div class=\"video-frame-wrapper splitscreen-wrapper ui-draggable ui-droppable _1\" id=\"videoFrame_" + userId + "\" >" +
//              "<span>"+this.userToken+"</span>"+
                "<div class=\"video-box\"> " +
                "<div class=\"video-frame\" > " +
                "<div class=\"video-stream-container\" id=\"myVideoContainer_" + userId + "\" >" +
                "</div></div></div>" +
                "</div>";

        $("#video-wrapper").html(divHtml);
        $("#onlineUsers").html($("#onlineUsers").html()+"<br/>"+userId);

        var videosContainer = document.getElementById('myVideoContainer_' + userId) || document.body;
        videosContainer.insertBefore(video, videosContainer.firstChild);
        setUpVideoBoxesCss();
    }

    function removeVideoBox(userId) {
        var videoFrame = document.getElementById('videoFrame_' + userId);
        if (videoFrame) videoFrame.parentNode.removeChild(videoFrame);
        setUpVideoBoxesCss();
    }

    function setUpVideoBoxesCss() {
        var i = 0;
        $("#video-wrapper > div").each(function () {
            i++;
            var lastClass = $(this).attr("class").split(" ").pop();
            $(this).removeClass(lastClass);
            $(this).addClass('_' + i);
        });
        if (i > 1) {
            $("#video-wrapper").attr("class", "div" + i);
        }
    }

    connection.openOrJoin("<%=roomId%>", function (isRoomExists, roomid) {

        if (!isRoomExists) {
            //  alert("room is created!");
            console.log("room is created! id="+roomid);
        }
    });

  });

</script>

<footer>
    <small id="send-message"></small>
</footer>

<script src="https://cdn.webrtc-experiment.com/common.js"></script>

</head>
<body>

<main class="video-space"  >
    <header class="video-space-header screen-element">
        <div class="content-wrapper">
            <div class="top-bar-button roomactivity">
                <i class="icon" id="icon_activity">
                    <svg width="18px" height="18px" viewBox="0 0 18 18" version="1.1" xmlns="http://www.w3.org/2000/svg">
                        <title>room-icon</title>
                        <defs></defs>
                        <g id="Page-1-Copy-4" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                            <g id="room-presence-b1---expanded-copy-3" transform="translate(-28.000000, -23.000000)"
                               fill="#FFFFFF">
                                <g id="room-icon" transform="translate(28.000000, 23.000000)">
                                    <g id="rooms-icon">
                                        <circle id="Oval-153" cx="2" cy="2" r="2"></circle>
                                        <circle id="Oval-153-Copy-3" cx="2" cy="9" r="2"></circle>
                                        <circle id="Oval-153-Copy-6" cx="2" cy="16" r="2"></circle>
                                        <circle id="Oval-153-Copy" cx="9" cy="2" r="2"></circle>
                                        <circle id="Oval-153-Copy-4" cx="9" cy="9" r="2"></circle>
                                        <circle id="Oval-153-Copy-2" cx="16" cy="2" r="2"></circle>
                                        <circle id="Oval-153-Copy-5" cx="16" cy="9" r="2"></circle>
                                        <circle id="Oval-153-Copy-8" cx="16" cy="16" r="2"></circle>
                                        <circle id="Oval-153-Copy-7" cx="9" cy="16" r="2"></circle>
                                    </g>
                                </g>
                            </g>
                        </g>
                    </svg>
                </i>
            </div>
            <div class="logo-wrapper ng-hide">
                <img class="custom-logo ng-hide">
            </div>
            <div class="room-url-wrapper" analytics-event="copyUrlAnalyticsEvent">
                <div class="room-url">
                    <p id="room-id">Room Id: <%= roomId %></p>
                </div>
                <div id="file-container"></div>
            </div>
            <div class="room-control-buttons control-button-group">
                <div class="top-bar-button contacts-button" title="Cam/Mic">
                    <i class="icon contacts" >
                        <svg width="18px" height="10px" viewBox="0 0 18 10" version="1.1" xmlns="http://www.w3.org/2000/svg">
                            <defs></defs>
                            <g id="fb-messenger-invite" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                <g id="web---fb-messenger-invite" transform="translate(-480.000000, -28.000000)" fill="#FFFFFF">
                                    <g id="room" transform="translate(-1.000000, 0.000000)">
                                        <g id="top-bar-icons" transform="translate(472.000000, 14.000000)">
                                            <g id="cam-/-mic">
                                                <g id="cam-/-mic-icon-icon">
                                                    <path d="M9,14.9953976 C9,14.4456547 9.44748943,14 9.99850233,14 L21.0014977,14 C21.5529553,14 22,14.4556644 22,14.9953976 L22,23.0046024 C22,23.5543453 21.5525106,24 21.0014977,24 L9.99850233,24 C9.44704472,24 9,23.5443356 9,23.0046024 L9,14.9953976 Z M23,17 L26,14 L27,14 L27,24 L26,24 L23,21 L23,17 Z"
                                                          id="camera"></path>
                                                </g>
                                            </g>
                                        </g>
                                    </g>
                                </g>
                            </g>
                        </svg>
                    </i>video-
                    <span class="desc">
                    <span>Cam/Mic</span>
                </span>
                </div>
            </div>

            <div class="user-control-buttons control-button-group">
                <div id="file-container"></div>
                <div class="flex-button-wrapper">
                    <button id="share-file" class="ui-button topbar-signup-button jstest-claim-button topbar-small-button">
                        Share File
                    </button>
                </div>
            </div>

        </div>
    </header>

    <room-activity class="open visible" id="room_activity">
        <aside class="room-list-content flex-column">
            <header class="room-list-header flex-row">
                <div class="refresh-button-wrapper">
                    <button class="pointer refresh-button icon-button" ></button>
                </div>

                <button  class="pointer close-button icon-button" id="close_btn"></button>
            </header>

            <favorite-rooms>
                <h1>
                    <i class="icon favorite-room-icon"></i>
                    <span>Favorites</span>
                </h1>

                <p class="empty-list-message helper-text">
                    Star rooms to keep them here for later
                </p>
            </favorite-rooms>

            <visited-rooms><h1>Recents</h1>
                <p class="empty-list-message" id="onlineUsers">
                </p>
            </visited-rooms>

        </aside>
    </room-activity>

    <div class="video-wrapper screen-element">
        <div class="div2" id="video-wrapper">
        </div>
    </div>
    <div class="bottom-right-button-group screen-element">
        <a class="ui-text-button white">Help</a>
        <a class="ui-text-button white">Terms of use</a>
    </div>
    <chat-wrapper animation-duration="300" id="chat_wrapper" class="notvisible">
        <div class="screen-element chat-wrapper user-select-enabled">
            <div class="chat jstest-chat" id="chat_wrapper_content" animation-duration="module.animationDuration" detect-media-links="true" close-callback="module.closeCallback()">
                <div class="chat-content">
                    <div class="action-button close-button" id="close_chat_btn" >
                        <i class="svg" ng-include="'/images/tools/close-button.0d2709ea.svg'">
                            <svg width="36px" height="36px" viewBox="0 0 36 36" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">
                                <title>close-button</title>
                                <g id="Page-1-Copy-Copy-Copy-Copy-Copy-Copy-Copy" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="MSPage">
                                    <g id="chat-open" sketch:type="MSArtboardGroup" transform="translate(-976.000000, -67.000000)" stroke="#FFFFFF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                        <g id="chat-window" sketch:type="MSLayerGroup" transform="translate(716.000000, 63.000000)">
                                            <g id="close-button" transform="translate(260.000000, 4.000000)" sketch:type="MSShapeGroup">
                                                <path d="M18,18 L23,23 L18,18 L13,23 L18,18 Z M18,18 L13,13 L18,18 L23,13 L18,18 Z" id="Path-135"></path>
                                            </g>
                                        </g>
                                    </g>
                                </g>
                            </svg></i>
                    </div>
                    <div class="chat-inner-wrapper">
                        <div class="messages-wrapper">
                            <aside class="unread-indicator unread-above ng-hide" ng-show="unreadCountAbove > 0">
                                <a ng-click="scrollToEarliestUnread()" ng-bind="unreadCountAboveLabel">0 unread message above</a>
                            </aside>
                            <div class="message-scroller" id="chat-container">
                                <div class="messages" id="chat-output">
                                    <div class="typing-indicator-wrapper ng-hide">
                                        <aside class="dot-dot-dot">
                                            <span class="dot"></span>
                                            <span class="dot"></span>
                                            <span class="dot"></span>
                                        </aside>
                                    </div>
                                </div>
                            </div>
                            <aside class="unread-indicator unread-below ng-hide" ng-show="unreadCountBelow > 0">
                                <a ng-click="scrollToLatestUnread()" ng-bind="unreadCountBelowLabel">0 unread message below</a>
                            </aside>
                        </div>
                        <div class="message-input-wrapper">
                                <input type="text" id="input-text-chat" name="message" placeholder="Enter Text Chat"  autocomplete="off" class="chat-text-input ng-pristine ng-valid ng-empty ng-touched">
                        </div>
                    </div>
                    <audio class="chat-notification-sound ng-hide" ng-hide="true" ng-src="https://d1x2efl61akomv.cloudfront.net/assets/chat-notification.ogg" type="audio/ogg" preload="" src="https://d1x2efl61akomv.cloudfront.net/assets/chat-notification.ogg"></audio>
                </div>
            </div>
        </div>
    </chat-wrapper>
    <div class="action-button chat-open-button visible" id="chat_btn" >
        <i class="svg bordered">
            <svg width="50px" height="50px" viewBox="0 0 50 50" version="1.1" xmlns="http://www.w3.org/2000/svg"
                 xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">
                <g id="Page-1-Copy-Copy-Copy-Copy-Copy-Copy-Copy" stroke="none" stroke-width="1" fill="none"
                   fill-rule="evenodd" sketch:type="MSPage">
                    <g id="chat-notifications" sketch:type="MSArtboardGroup"
                       transform="translate(-951.000000, -671.000000)" fill="#FFFFFF">
                        <g id="chat-button" sketch:type="MSLayerGroup" transform="translate(951.000000, 671.000000)">
                            <path d="M33.4510276,17 L15.5487859,17 C14.696991,17 14,17.6744168 14,18.498479 L14,30.0445536 C14,30.8687999 14.696991,31.5430326 15.5487859,31.5430326 L20.7742597,31.5430326 L28.2233156,36 L28.2233156,31.5430326 L33.4510276,31.5430326 C34.3028225,31.5430326 35,30.8687999 35,30.0445536 L35,18.498479 C35,17.6744168 34.3028225,17 33.4510276,17"
                                  id="Fill-15" sketch:type="MSShapeGroup"></path>
                        </g>
                    </g>
                </g>
            </svg>
        </i>
    </div>
</main>


</body>
</html>
